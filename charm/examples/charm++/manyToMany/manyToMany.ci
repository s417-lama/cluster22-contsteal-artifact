mainmodule manyToMany {

	readonly CProxy_Main mainProxy;
    readonly int max_iter;
    readonly int numChares;
    readonly int msgSize;

	message manyToManyMsg {
		char data[];
	};

	mainchare Main {
		entry Main(CkArgMsg *m);
		entry [reductiontarget] void manyToManyReady();
		entry [reductiontarget] void nextmanyToMany();
	};

	array [2D] manyToMany {
		entry manyToMany();
        entry void sendmanyToMany();
		entry void getmanyToMany(manyToManyMsg *m);
	
        entry void domanyToMany() {
           
            serial {
                sendmanyToMany();
            }

            for(count = 0; count < numChares; ++count){
                when getmanyToMany[iter](manyToManyMsg *m) serial {
                    processmanyToMany(m);
                }
            }
            serial {
			    iter++;
				finish();
            }
		};
	};
};
