mainmodule hello {
  readonly CProxy_Main mainProxy;
  readonly CProxy_Hello helloProxy;
  readonly int nElements;

  message HelloMsg;

  mainchare Main {
    entry Main(CkArgMsg *m);
    entry void Done();
  };

  array [1D] Hello {
    entry Hello(void);
    entry void SayHi(HelloMsg *vm){
      serial{ delete vm; }
      forall [j] (nElements-1:0,-1){
        serial{
	  helloProxy[j].RecvHello(new HelloMsg(thisIndex));
	}
      }
      serial{
        thisProxy[thisIndex].StartRecv(new HelloMsg(0));
      }
    };
    entry void StartRecv(HelloMsg* vm){
      serial {
        delete vm;
        sum = 0;
      }
      forall [i] (1:nElements,1) {
        when RecvHello(HelloMsg *m) {
          serial {
            sum += m->data;
	    delete m;
          }
        }
      }
      serial {
        CkPrintf("[%d]Sum = %d\n",thisIndex,sum);
	mainProxy.Done();
      }
    };
    entry void RecvHello(HelloMsg *m);
  };
};
