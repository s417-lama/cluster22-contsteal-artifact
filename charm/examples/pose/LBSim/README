How to run it

./charmrun sched <maxObjects> <connectivity> <value> <endTime> <topology> > <datafilename>

1.maxObjects : Number of scheduler objects ie no. of processors in the simulation

2.connectivity: Only for the graph topology (TODO: Needs to be made functional)

3.value: Value for which fibonacci is to be calculated

4.endTime: The POSE endTime, the simulation stops when GVT reaches this value.

5.topology: Four topologies supported now: graph, ring, tours2d, torus3d

5.datafilename: The name of file in which the output will be stored. This is done by directing the output to the file by '>'.

Next step would be 
./statcoll <datafilename> <outputfilename1> <maxObjects> <endTime>
./statanly <outputfilename1> <outputfilename2> <maxObjects> <endTime>

statcoll parses the data file so as to collect the raw statistics of each processor for each period.
statanly analyses the outputfile1 to calculate average utilisation per processor per period

Note: endTime here is actual end of simulation i.e. last time entry in the datafile

(TODO: Combine both steps into one (?))

Next <outputfilename2>  should be appropriately entered in the gnuplot script such as plotsim.p 

Then a command "gnuplot plotsim.p" will generate the graphical output.

To add a new topology:
1)Declare the topology class in topology.h.
2)Include two functions: a) max_neighbors() which gives the number of neighbors and b)neighbors() which returns the list of neighbors
3)Define the functions in topology.C
4)Register the topology in class CkLBTopoVec
