module groupdependence
{

  message fixedMessage;

  message varMessage {
    int a[];
    double b[];
  };

  group groupA {
    entry groupA();
  }

  group groupB {
    entry groupB();
    entry groupB(CProxy_groupA &);
    entry void test_em_regular(CProxy_groupA &);
    entry [inline] void test_em_inline(CProxy_groupA &);
  }

  chare chareA {
    entry chareA();
    entry chareA(CProxy_groupA &);
    entry void test_em_regular(CProxy_groupA &);
    entry [inline] void test_em_inline(CProxy_groupA &);
  }


  array[1D] arrayA {
    entry arrayA(int size);
    entry arrayA(int size, CProxy_groupA &);
    entry void test_em_regular(CProxy_groupA &);
    entry [inline] void test_em_inline(CProxy_groupA &);
  }

  nodegroup nodeGroupA {
    entry nodeGroupA();
    entry nodeGroupA(CProxy_groupA &);
    entry void test_em_regular(CProxy_groupA &);
    entry [inline] void test_em_inline(CProxy_groupA &);
  }

  chare tester {
    entry tester();
    entry void next_test();
    entry void complete_test(int num);
    entry void recv_fixedmessage(fixedMessage *);
    entry void recv_varmessage(varMessage *);
  }

}
