module amr {
 message NeighborMsg;
 message _DMsg;
 message _ArrInitMsg;
 message ChildInitMsg;
 message _RefineChkMsg;
 message _RefineMsg;
 message _RedMsg;
 message StartUpMsg;
 message _DummyMsg;
 message _StatCollMsg;
 message _CreateStatCollMsg;

 chare AmrCoordinator
 {
  	entry AmrCoordinator(_DMsg*);
	entry AmrCoordinator(StartUpMsg*);
	entry void synchronise(_RedMsg*);
	entry void reportStats(_StatCollMsg*);
 };

 array [BitVec] Cell
 {

	entry void neighbor_data(NeighborMsg*);
 	entry void refine(_RefineMsg*);
	entry void change_to_leaf(ChildInitMsg*);
	entry void refine_confirmed(_DMsg *);
	entry void resume(_DMsg *);
	entry void synchronise(_RedMsg*);
	entry void refineExec(_DMsg*);
	entry void checkRefine(_RefineChkMsg*);
	entry void goToAtSync(_DMsg*);
 };

 array [BitVec] Cell1D :Cell
 {
	entry [createhere]Cell1D(_ArrInitMsg*);
 };

 array [BitVec] Cell2D :Cell
 {
	entry[createhere] Cell2D(_ArrInitMsg*);
 };

 array [BitVec] Cell3D :Cell
 {
	entry[createhere] Cell3D(_ArrInitMsg*);
 };

 group StatCollector {
    entry StatCollector(_CreateStatCollMsg*);
    entry void sendStat(_DummyMsg*);
 };
};
